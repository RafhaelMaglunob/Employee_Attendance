-- Connect as postgres
-- psql -U postgres

-- Create database
CREATE DATABASE employee_attendance;
\c employee_attendance

-- Enable UUID extension
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Sequence for employee IDs
CREATE SEQUENCE employee_id_seq START 1;

-- Employees table
CREATE TABLE employees (
    employee_id TEXT PRIMARY KEY DEFAULT 
        'TCBS' || TO_CHAR(NOW(), 'YYYY') || '-' || LPAD(nextval('employee_id_seq')::text, 4, '0'),
    fullname VARCHAR(100),
    nickname VARCHAR(50),
    email VARCHAR(100),
    position VARCHAR(100),
    employment_type VARCHAR(50),
    gender VARCHAR(10),
    contact VARCHAR(20),
    marital_status VARCHAR(20),
    birthday DATE,
    address VARCHAR(150),
    sss_number VARCHAR(20),
    pagibig VARCHAR(20),
    philhealth VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    current_status VARCHAR(20),
    status VARCHAR(20),
    effective_deletion_date DATE,
    deletion_status VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS employee_contracts (
    contract_id SERIAL PRIMARY KEY,       -- unique contract ID
    employee_id TEXT NOT NULL,            -- reference to employee
    start_of_contract TIMESTAMP NOT NULL, -- start date/time
    end_of_contract TIMESTAMP NOT NULL,   -- end date/time
    contract_type TEXT NOT NULL,          -- e.g., "Full-Time" or "Part-Time"
    created_at TIMESTAMP DEFAULT NOW(),   -- when contract was created
    updated_at TIMESTAMP DEFAULT NOW(),   -- last updated timestamp
    CONSTRAINT fk_employee
        FOREIGN KEY (employee_id)
        REFERENCES employees(employee_id)
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS employee_contracts_archive (
    contract_id SERIAL PRIMARY KEY,       -- same as original
    employee_id TEXT NOT NULL,            -- employee ID reference
    start_of_contract TIMESTAMP NOT NULL,
    end_of_contract TIMESTAMP NOT NULL,
    contract_type TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);


ALTER TABLE employees ADD CONSTRAINT unique_email UNIQUE(email);
ALTER TABLE employees ADD CONSTRAINT unique_fullname UNIQUE(fullname);

-- Employee Documents
CREATE TABLE employee_documents (
    document_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    employee_id TEXT NOT NULL REFERENCES employees(employee_id) ON DELETE CASCADE,
    sss_id VARCHAR(255),
    resume_cv VARCHAR(255),
    pagibig VARCHAR(255),
    philhealth VARCHAR(255),
    barangay_clearance VARCHAR(255),
    status VARCHAR(20) DEFAULT 'Incomplete',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Employee Dependents
CREATE TABLE employee_dependents (
    id SERIAL PRIMARY KEY,
    employee_id TEXT REFERENCES employees(employee_id) ON DELETE CASCADE,
    fullname VARCHAR(100),
    relationship VARCHAR(50),
    address VARCHAR(150),
    contact VARCHAR(20),
    city VARCHAR(50),
    postalcode VARCHAR(10),
    gcash_number VARCHAR(20)
);

-- Archive Employees (independent of original employees)
CREATE TABLE employees_archive (
    employee_id TEXT PRIMARY KEY,
    fullname VARCHAR(100),
    nickname VARCHAR(50),
    email VARCHAR(100),
    position VARCHAR(100),
    employment_type VARCHAR(50),
    gender VARCHAR(10),
    contact VARCHAR(20),
    marital_status VARCHAR(20),
    birthday DATE,
    address VARCHAR(150),
    sss_number VARCHAR(20),
    pagibig VARCHAR(20),
    philhealth VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    current_status VARCHAR(20),
    status VARCHAR(20),
    CONSTRAINT unique_employee_archive_row UNIQUE(employee_id, fullname, email)
);

CREATE TABLE employee_contracts_archive (
    contract_id SERIAL PRIMARY KEY,
    employee_id VARCHAR(20) REFERENCES employees(employee_id) ON DELETE CASCADE,
    start_of_contract DATE NOT NULL,
    end_of_contract DATE NOT NULL,
    contract_type VARCHAR(50), -- e.g., "Full-Time", "Part-Time", "Probation"
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Archive Employee Documents (FK points to archive, NOT original)
CREATE TABLE employee_documents_archive (
    document_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    employee_id TEXT NOT NULL REFERENCES employees_archive(employee_id) ON DELETE CASCADE,
    sss_id VARCHAR(255),
    resume_cv VARCHAR(255),
    pagibig VARCHAR(255),
    philhealth VARCHAR(255),
    barangay_clearance VARCHAR(255),
    status VARCHAR(20) DEFAULT 'Incomplete',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Archive Employee Dependents (FK points to archive)
CREATE TABLE employee_dependents_archive (
    id SERIAL PRIMARY KEY,
    employee_id TEXT REFERENCES employees_archive(employee_id) ON DELETE CASCADE,
    fullname VARCHAR(100),
    relationship VARCHAR(50),
    address VARCHAR(150),
    contact VARCHAR(20),
    city VARCHAR(50),
    postalcode VARCHAR(10),
    gcash_number VARCHAR(20)
);

-- Audit Logs
CREATE TABLE audit_logs (
    log_id SERIAL PRIMARY KEY,
    employee_id TEXT REFERENCES employees(employee_id),
    action VARCHAR(255) NOT NULL,
    action_time TIMESTAMP DEFAULT NOW(),
    remarks TEXT
);

-- Work Logs
CREATE TABLE employee_work_logs (
    log_id SERIAL PRIMARY KEY,
    employee_id TEXT REFERENCES employees(employee_id),
    work_date DATE NOT NULL,
    hours_worked DECIMAL(5,2) NOT NULL
);

-- Incident Reports
CREATE TABLE incident_reports (
    incident_id SERIAL PRIMARY KEY,
    employee_id TEXT REFERENCES employees(employee_id),
    incident_type VARCHAR(100),
    incident_date DATE NOT NULL,
    witness VARCHAR(100),
    reported_by VARCHAR(100),
    description VARCHAR(100),
    status VARCHAR(50)
);

-- Employee Accounts
CREATE TABLE employee_account (
    account_id SERIAL PRIMARY KEY,
    employee_id TEXT REFERENCES employees(employee_id),
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(100) NOT NULL,
    must_change_password BOOLEAN DEFAULT TRUE
);

CREATE TABLE employee_account_archive (
    account_id SERIAL PRIMARY KEY,
    employee_id TEXT,
    email VARCHAR(100),
    password VARCHAR(100),
    must_change_password BOOLEAN,
    deleted_at TIMESTAMP DEFAULT NOW()
);

-- Admin Accounts
CREATE TABLE admin_account (
    admin_id SERIAL PRIMARY KEY,
    fullname VARCHAR(100),
    email VARCHAR(100) UNIQUE NOT NULL,
    password TEXT NOT NULL,
    role VARCHAR(50) DEFAULT 'Admin',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Attendance
CREATE TABLE employee_attendance (
    attendance_id SERIAL PRIMARY KEY,
    employee_id TEXT REFERENCES employees(employee_id),
    attend_date DATE NOT NULL,
    clock_in TIME NOT NULL,
    clock_out TIME NOT NULL,
    total_hours DECIMAL(5,2) NOT NULL,
    status VARCHAR(100)
);
