-- Connect as postgres
-- psql -U postgres

--Check the current employee_id value
--SELECT nextval('employee_id_seq');

-- Create database
CREATE DATABASE employee_attendance;
\c employee_attendance

-- Enable UUID extension
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Sequence for employee IDs
CREATE SEQUENCE employee_id_seq START 1;

-- Employees table
CREATE TABLE employees (
    employee_id TEXT PRIMARY KEY DEFAULT 
        'TCBS' || TO_CHAR(NOW(), 'YYYY') || '-' || LPAD(nextval('employee_id_seq')::text, 4, '0'),
    fullname VARCHAR(100),
    nickname VARCHAR(50),
    email VARCHAR(100),
    position VARCHAR(100),
    employment_type VARCHAR(50),
    gender VARCHAR(10),
    contact VARCHAR(20),
    marital_status VARCHAR(20),
    birthday DATE,
    address VARCHAR(150),
    sss_number VARCHAR(20),
    pagibig VARCHAR(20),
    philhealth VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    current_status VARCHAR(20),
    status VARCHAR(20)
);

-- Employee Documents (with status for checker)
CREATE TABLE employee_documents (
    document_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    employee_id TEXT NOT NULL REFERENCES employees(employee_id) ON DELETE CASCADE,
    sss_id VARCHAR(255),
    resume_cv VARCHAR(255),
    pagibig VARCHAR(255),
    philhealth VARCHAR(255),
    barangay_clearance VARCHAR(255),
    status VARCHAR(20) DEFAULT 'Incomplete',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Employee Dependents
CREATE TABLE employee_dependents (
    id SERIAL PRIMARY KEY,
    employee_id TEXT REFERENCES employees(employee_id) ON DELETE CASCADE,
    fullname VARCHAR(100),
    relationship VARCHAR(50),
    address VARCHAR(150),
    contact VARCHAR(20),
    city VARCHAR(50),
    postalcode VARCHAR(10),
    gcash_number VARCHAR(20)
);

-- Archive Employees
CREATE TABLE employees_archive (
    employee_id TEXT PRIMARY KEY,
    fullname VARCHAR(100),
    nickname VARCHAR(50),
    email VARCHAR(100),
    position VARCHAR(100),
    employment_type VARCHAR(50),
    gender VARCHAR(10),
    contact VARCHAR(20),
    marital_status VARCHAR(20),
    birthday DATE,
    address VARCHAR(150),
    sss_number VARCHAR(20),
    pagibig VARCHAR(20),
    philhealth VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    current_status VARCHAR(20),
    status VARCHAR(20)
);

-- Archive Employee Documents
CREATE TABLE employee_documents_archive (
    document_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    employee_id TEXT NOT NULL REFERENCES employees(employee_id) ON DELETE CASCADE,
    sss_id VARCHAR(255),
    resume_cv VARCHAR(255),
    pagibig VARCHAR(255),
    philhealth VARCHAR(255),
    barangay_clearance VARCHAR(255),
    status VARCHAR(20) DEFAULT 'Incomplete',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Archive Employee Dependents
CREATE TABLE employee_dependents_archive (
    id SERIAL PRIMARY KEY,
    employee_id TEXT REFERENCES employees(employee_id) ON DELETE CASCADE,
    fullname VARCHAR(100),
    relationship VARCHAR(50),
    address VARCHAR(150),
    contact VARCHAR(20),
    city VARCHAR(50),
    postalcode VARCHAR(10),
    gcash_number VARCHAR(20)
);

ALTER TABLE employees ADD CONSTRAINT unique_email UNIQUE(email);
ALTER TABLE employees ADD CONSTRAINT unique_fullname UNIQUE(fullname);
ALTER TABLE employees ADD COLUMN effective_deletion_date DATE;
ALTER TABLE employees_archive ADD CONSTRAINT unique_employee_archive_row UNIQUE (employee_id, fullname, email);

